//data/projects/index.ts
import { Project } from "./types";
export const projects: Project[] = [
  {
    id: 1,
    title: "LifeFlow – Blood Donation App",
    description:
      "Role-based blood donation app with dashboards, donation management, and a blogging system.",
    features: [
      "Role-based dashboard for Admin, Volunteer, Donor",
      "Create/view/manage donation requests with status updates",
      "Blog system with JoditEditor for publishing",
      "Secure Firebase authentication and JWT authorization",
    ],
    technologies: [
      "React",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Tailwind CSS",
      "Firebase",
      "JWT",
    ],
    images: [
      "/projects/lifeflow/home_banner.png",
      "/projects/lifeflow/admin_dashboard.png",
      "/projects/lifeflow/donation_requests.png",
      "/projects/lifeflow/donation_request_management.png",
      "/projects/lifeflow/analytics_page.png",
      "/projects/lifeflow/blog_page.png",
    ],
    githubClient:
      "https://github.com/CodesWithRakib/lifeflow-blood-donation-client",
    githubServer:
      "https://github.com/CodesWithRakib/lifeflow-blood-donation-server",
    liveLink: "https://blood-donation-full-stack.web.app/",
    category: "fullstack",
    date: "2024",
    client: "Nonprofit Health Org",
    tags: ["Healthcare", "Donation", "React", "Node.js"],
    duration: "2.5 months",
    teamSize: 3,
    users: 3000,
    testimonials: [
      {
        quote:
          "LifeFlow made managing donation drives incredibly easy and organized. An essential tool for our operations.",
        author: "Dr. Anwar Hossain",
        role: "Director, Nonprofit Health Org",
      },
    ],
    awards: [],
    challenges: [
      "Implementing real-time status updates for donation requests",
      "Designing a role-based access control system with Firebase",
      "Creating an intuitive dashboard for different user roles",
      "Managing complex state for donation tracking and blogging system",
    ],
    futureImprovements: [
      "Implementing a notification system for donation requests",
      "Adding a map feature to locate nearby donation centers",
      "Integrating with hospital systems for real-time blood inventory",
      "Adding a mobile app for better accessibility",
    ],
  },
  {
    id: 2,
    title: "Globira – B2B Wholesale Marketplace",
    description:
      "A full-stack B2B platform enabling wholesale transactions with admin, seller, and buyer dashboards.",
    features: [
      "Secure authentication using Firebase & JWT",
      "Role-based dashboard for admin, seller, and buyer",
      "Product CRUD with image upload, search, filter, and pagination",
      "Review system (1 review/user), responsive UI, dark mode",
    ],
    technologies: [
      "React 19",
      "Tailwind CSS v4",
      "Firebase",
      "Express.js",
      "MongoDB",
      "Cloudinary",
      "JWT",
      "Vercel",
    ],
    images: [
      "/projects/globira/home_banner.png",
      "/projects/globira/all_products.png",
      "/projects/globira/my_products.png",
      "/projects/globira/add_product.png",
      "/projects/globira/category_products.png",
    ],
    githubClient: "https://github.com/CodesWithRakib/globira-client-side",
    githubServer: "https://github.com/CodesWithRakib/globira-server-side",
    liveLink: "https://b11a11-globira-site.web.app/",
    category: "fullstack",
    date: "2023",
    client: "Tech Solutions Inc.",
    tags: ["E-commerce", "B2B", "Marketplace", "React", "Node.js"],
    duration: "3 months",
    teamSize: 4,
    users: 5000,
    testimonials: [
      {
        quote:
          "Globira transformed our wholesale operations. The platform is intuitive and has significantly improved our efficiency.",
        author: "Sarah Johnson",
        role: "Operations Director at Tech Solutions",
      },
    ],
    awards: [
      {
        title: "Best B2B Platform",
        organization: "Tech Innovation Awards",
        year: "2023",
      },
    ],
    challenges: [
      "Implementing a complex product catalog with advanced filtering",
      "Designing a secure payment processing system",
      "Managing inventory synchronization across multiple sellers",
      "Creating a responsive UI that works well on all device sizes",
    ],
    futureImprovements: [
      "Adding AI-powered product recommendations",
      "Implementing a multi-currency payment system",
      "Creating a mobile app for iOS and Android",
      "Adding analytics dashboard for sellers to track performance",
    ],
  },
  {
    id: 3,
    title: "Green Nest – Plant Care Tracker",
    description:
      "A CRUD-based application to manage plant care and visually monitor growth.",
    features: [
      "User auth with Firebase (Email/Google)",
      "CRUD operations for plant data",
      "Image uploads & personalized watering schedules",
      "Responsive dark/light UI with sorting & alerts",
    ],
    technologies: [
      "React",
      "Tailwind CSS",
      "Firebase",
      "Express.js",
      "MongoDB",
      "Date-fns",
      "React Toastify",
      "SweetAlert2",
    ],
    images: [
      "/projects/green-nest/dashboard.png",
      "/projects/green-nest/plant_details.png",
      "/projects/green-nest/add_plant.png",
      "/projects/green-nest/all_plants.png",
      "/projects/green-nest/contact_page.png",
    ],
    githubClient: "https://github.com/CodesWithRakib/plant-care-client-side",
    githubServer: "https://github.com/CodesWithRakib/plant-care-server-side",
    liveLink: "https://green-nest-plant-care-tracker.web.app/",
    category: "fullstack",
    date: "2023",
    client: "Green Wellness Group",
    tags: ["Plants", "CRUD", "Personal Tracker", "React", "Node.js"],
    duration: "2 months",
    teamSize: 3,
    users: 2000,
    testimonials: [],
    awards: [],
    challenges: [
      "Implementing accurate plant care reminders based on species",
      "Designing an intuitive plant growth visualization system",
      "Creating a responsive image gallery for plant photos",
      "Managing complex scheduling for watering and fertilizing",
    ],
    futureImprovements: [
      "Adding plant disease identification using AI",
      "Integrating with weather APIs for outdoor plant care suggestions",
      "Creating a community feature for users to share plant care tips",
      "Adding a plant marketplace for buying and selling plants",
    ],
  },
];
